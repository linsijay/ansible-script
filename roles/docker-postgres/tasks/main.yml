---

- name: Check Postgresql container status
  shell: "docker ps -a | grep '{{ app_name }}-server' | cat"
  register: server_container_status

- name: Remove Postgresql container with same name
  command: docker rm {{ app_name }}-server
  when: server_container_status.stdout.find('Exited ') != -1
  register: server_container_removed

- name: create new directory on the host for persistence data using
  file: path={{ postgres_data_container_volume }} state=directory

- name: Start new Postgresql container
  command: >
    docker run -d
    --name {{ app_name }}-server
    -v {{ postgres_data_container_volume }}:/var/lib/postgresql/data/pgdata
    -e POSTGRES_PASSWORD={{ postgres_password }}
    -e PGDATA=/var/lib/postgresql/data/pgdata
    -p 127.0.0.1:{{ postgres_private_port }}:{{ postgres_private_port }}
    {{ postgres_docker_image }}
  when: (server_container_status.stdout.find('Up ') == -1)

